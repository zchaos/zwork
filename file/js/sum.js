// 输出的html结构
输出的html无浮动，浮动信息在客户端处理。客户端浮动：
1.如果数据不多，浮动和非浮动使用同一个表格，不再拆分为两个表格
2.如果数据很多，以BI_14676A为例，则会将A1到O7为一个表格，A8到O9为一个小表格做浮动

// 浮动行初始化
cifillforms在下载html后，初始化表单时，会根据datamgr中的浮动信息和html的dom结构，缓存浮动区域的html，以后增加浮动行会以缓存的html,生成新行新列

TODO:缓存的html是什么样的，主要嵌套浮动和交叉浮动是，每个浮动缓存的范围
初步设想:缓存整个浮动区域，在增加行列时，动态计算。
		如F3浮动，会缓存F3到O9整个区域
		 A8浮动，缓存F8到O9
		 B9浮动，缓存B9到O9

// 第一次全量刷新
交叉浮动输出的html只有一个方向浮动，另外一个方向固定。第一次全量刷新时，会先在固定方向上增加，然后在浮动方向上增加

// 其他全量刷新（如切换报送单位或数据期）
1.行不变，列不变：刷新数据
2.行不变，列减少：删除列，刷新数据
3.行不变，列增加：增加列，刷新数据
4.行减少，列不变：删除行，刷新数据
5.行减少，列减少：删除行，删除列，刷新数据
6.行减少，列增加：删除行，增加列，刷新数据
7.行增加，列不变：增加行，刷新数据
8.行增加，列减少：删除列，增加行，刷新数据
9.行增加，列增加：增加列，增加行，刷新数据

总体规则（列固定，行浮动）:
1.先删后增
2.先删行，再删列。列增删比较慢
3.先增列，再增行

TODO:测试：如果有100列，100行，此时切换到新的报送单位，有120列，100行，此时测试两种方案的速度
1.直接增加20列
2.删除100行，增加20列，再增加100行
这是增加列会比较慢，担心直接增加20列，速度很慢

// 增量刷新
// 切换数据期报送单位

// 虚拟表格向下滚动
删除顶部的行，底部增加行。特别要考虑第一个单元格是合并单元格时，需要将该单元格，向下移动
// 虚拟表格向上滚动
删除底部的行，增加顶部的行。特别要考虑第一个单元格是合并单元格时，需要将该单元格，提到顶行

// 虚拟表格具体怎么刷新数据


// 嵌套浮动
第一个单元格是每行浮动出一个，还是设置为合并单元格。--现在已经有属性设置了

// 单元格的边框
能够自定义，以前直接从行复制，出现了一些问题，比如上下边框设置了加粗，但是浮动行间不需要加粗，只是浮动区域外边框需要加粗

// ====== 浮动需要的信息 ====== //
1.浮动区域的范围信息，如F3浮动区域，需要获得从第3行第6列开始到第9行15列结束
	datamgr中还应该行列与单元格id的对应关系，粘贴和虚拟表格会用到
2.浮动方向:横向浮动或纵向浮动
3.浮动区域的交叉嵌套关系，如F3和A8交叉，A8和B9嵌套。在插入行和删除行会用到
	如：删除行时，应该先删除最外面的行，再删除内部浮动区域的行
	支持只获得行浮动区域或列浮动区域
	支持从浮动区域中获得内部嵌套的浮动区域
4.单元格的行列号和合并信息。虚拟表格会用到

